"use strict";

require("babel-polyfill");

require("newrelic");

var _logger = require("./logger");

var _ = require(".");

_.NewRelicLogDeliveryAgent.configure({
  minLogItems: 5,
  minLogItemsToForce: 10
});

var label = '????';
var log = (0, _logger.withLogger)(label);
log.info('doing things');
var count = 0;
var target = 109;

function doDelayedWrite() {
  console.log("\x1B[4msample output\x1B[0m");
  setTimeout(function () {
    log.info('' + ++count, {
      miscMetadata: count
    });
    log.error("Error in metadata is rendered like ->", new Error('This is an error message'));

    if (count < target) {
      doDelayedWrite();
    } else {
      _.NewRelicLogDeliveryAgent.getInstance().shutdown();
    }
  }, 1000);
}

console.log('start loop');
doDelayedWrite();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy90ZXN0LnRzIl0sIm5hbWVzIjpbIk5ld1JlbGljTG9nRGVsaXZlcnlBZ2VudCIsImNvbmZpZ3VyZSIsIm1pbkxvZ0l0ZW1zIiwibWluTG9nSXRlbXNUb0ZvcmNlIiwibGFiZWwiLCJsb2ciLCJpbmZvIiwiY291bnQiLCJ0YXJnZXQiLCJkb0RlbGF5ZWRXcml0ZSIsImNvbnNvbGUiLCJzZXRUaW1lb3V0IiwibWlzY01ldGFkYXRhIiwiZXJyb3IiLCJFcnJvciIsImdldEluc3RhbmNlIiwic2h1dGRvd24iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUFBLDJCQUF5QkMsU0FBekIsQ0FBbUM7QUFDL0JDLEVBQUFBLFdBQVcsRUFBRSxDQURrQjtBQUUvQkMsRUFBQUEsa0JBQWtCLEVBQUU7QUFGVyxDQUFuQzs7QUFJQSxJQUFNQyxLQUFLLEdBQUcsTUFBZDtBQUVBLElBQU1DLEdBQUcsR0FBRyx3QkFBV0QsS0FBWCxDQUFaO0FBQ0FDLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLGNBQVQ7QUFDQSxJQUFJQyxLQUFLLEdBQUcsQ0FBWjtBQUNBLElBQUlDLE1BQU0sR0FBRyxHQUFiOztBQUVBLFNBQVNDLGNBQVQsR0FBMEI7QUFDdEJDLEVBQUFBLE9BQU8sQ0FBQ0wsR0FBUixDQUFZLDZCQUFaO0FBQ0FNLEVBQUFBLFVBQVUsQ0FBQyxZQUFNO0FBQ2JOLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLEtBQUksRUFBRUMsS0FBZixFQUF1QjtBQUFFSyxNQUFBQSxZQUFZLEVBQUVMO0FBQWhCLEtBQXZCO0FBQ0FGLElBQUFBLEdBQUcsQ0FBQ1EsS0FBSiwwQ0FBbUQsSUFBSUMsS0FBSixDQUFVLDBCQUFWLENBQW5EOztBQUNBLFFBQUlQLEtBQUssR0FBR0MsTUFBWixFQUFvQjtBQUNoQkMsTUFBQUEsY0FBYztBQUNqQixLQUZELE1BRU87QUFDSFQsaUNBQXlCZSxXQUF6QixHQUF1Q0MsUUFBdkM7QUFDSDtBQUNKLEdBUlMsRUFRUCxJQVJPLENBQVY7QUFTSDs7QUFDRE4sT0FBTyxDQUFDTCxHQUFSLENBQVksWUFBWjtBQUNBSSxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiYmFiZWwtcG9seWZpbGxcIjtcbmltcG9ydCBcIm5ld3JlbGljXCI7XG5pbXBvcnQgeyB3aXRoTG9nZ2VyIH0gZnJvbSAnLi9sb2dnZXInO1xuaW1wb3J0IHsgTmV3UmVsaWNMb2dEZWxpdmVyeUFnZW50IH0gZnJvbSAnLic7XG5cbk5ld1JlbGljTG9nRGVsaXZlcnlBZ2VudC5jb25maWd1cmUoe1xuICAgIG1pbkxvZ0l0ZW1zOiA1LFxuICAgIG1pbkxvZ0l0ZW1zVG9Gb3JjZTogMTBcbn0pXG5jb25zdCBsYWJlbCA9ICc/Pz8/JztcblxuY29uc3QgbG9nID0gd2l0aExvZ2dlcihsYWJlbCk7XG5sb2cuaW5mbygnZG9pbmcgdGhpbmdzJyk7XG5sZXQgY291bnQgPSAwO1xubGV0IHRhcmdldCA9IDEwOTtcblxuZnVuY3Rpb24gZG9EZWxheWVkV3JpdGUoKSB7XG4gICAgY29uc29sZS5sb2coJ1xcdTAwMUJbNG1zYW1wbGUgb3V0cHV0XFx1MDAxQlswbScpO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBsb2cuaW5mbygnJysoKytjb3VudCksIHsgbWlzY01ldGFkYXRhOiBjb3VudCB9KTtcbiAgICAgICAgbG9nLmVycm9yKGBFcnJvciBpbiBtZXRhZGF0YSBpcyByZW5kZXJlZCBsaWtlIC0+YCwgbmV3IEVycm9yKCdUaGlzIGlzIGFuIGVycm9yIG1lc3NhZ2UnKSk7XG4gICAgICAgIGlmIChjb3VudCA8IHRhcmdldCkge1xuICAgICAgICAgICAgZG9EZWxheWVkV3JpdGUoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIE5ld1JlbGljTG9nRGVsaXZlcnlBZ2VudC5nZXRJbnN0YW5jZSgpLnNodXRkb3duKCk7XG4gICAgICAgIH1cbiAgICB9LCAxMDAwKTtcbn1cbmNvbnNvbGUubG9nKCdzdGFydCBsb29wJylcbmRvRGVsYXllZFdyaXRlKCk7XG4iXX0=